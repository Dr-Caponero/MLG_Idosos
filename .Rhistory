digits = 4,
format.args=list(big.mark=".", decimal.mark=","),
align = "c",
row.names = T,
) %>%
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
Y <- dados$resp
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
# chute inicial mu = Y
mu <- Y
#### primeira iteração
eta <- Y
z <- eta
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
phi
Kbb_inv
Kbb
xx
W
V
Y
(mu)*(1-mu)
# chute inicial mu = Y
mu <- as.numeric(Y)-1
mu
#### primeira iteração
eta <- mu
z <- eta
V <- diag((mu)*(1-mu))
W <- V
W
Kbb <- phi*t(xx)%*%W%*%xx
Kbb
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
#| echo: false
#| warning: false
Y <- dados$resp
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0
# inicio das iterações
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
beta_it
#| echo: false
#| warning: false
Y <- dados$resp
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 1
# inicio das iterações
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
beta_it
#| echo: false
#| warning: false
Y <- dados$resp
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
beta_it
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
Y <- as.numeric(dados$resp)-1
Y
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
W
Kbb <- phi*t(xx)%*%W%*%xx
Kbb
Kbb_inv <- solve(Kbb)
Kbb_inv
z <- eta + solve(V)%*%(Y-mu)
z
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
beta_it
#| echo: false
#| warning: false
Y <- as.numeric(dados$resp)-1
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
while(TRUE){
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
if(beta_it[1]-alfa<0.0001 & beta_it[2]-beta<0.0001) break
alpha <- beta_it[1]
beta <- beta_it[2]
}
#| echo: false
#| warning: false
Y <- as.numeric(dados$resp)-1
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
while(TRUE){
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
if(beta_it[1]-alpha<0.0001 & beta_it[2]-beta<0.0001) break
alpha <- beta_it[1]
beta <- beta_it[2]
}
#| echo: false
#| warning: false
Y <- as.numeric(dados$resp)-1
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
while(TRUE){
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
if(beta_it[1]-alpha<0.0001 & beta_it[2]-beta<0.0001) break
alpha <- beta_it[1]
beta <- beta_it[2]
}
beta_it
#| echo: false
#| warning: false
Y <- as.numeric(dados$resp)-1
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
k <- 0
while(TRUE){
k <- k+1
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
if(beta_it[1]-alpha<0.0001 & beta_it[2]-beta<0.0001) break
alpha <- beta_it[1]
beta <- beta_it[2]
}
beta_it
cat("Com",k,"iterações")
#| echo: false
#| warning: false
Y <- as.numeric(dados$resp)-1
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
k <- 0
while(TRUE){
k <- k+1
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
if(beta_it[1]-alpha<0.000001 & beta_it[2]-beta<0.000001) break
alpha <- beta_it[1]
beta <- beta_it[2]
}
beta_it
cat("Com",k,"iterações, atingiu a precisão de 10^-6")
D_est <- 2* sum(log(1/(n_i*mu_i)) + (n_i - 1)*log((1-(1/n_i))/(1-mu_i)))
#| echo: false
#| warning: false
library(pacman)
pacman::p_load(tidyverse,  readit, summarytools,
kableExtra,  ggpubr,  gridExtra,
glue, corrplot,  readxl, writexl, ggthemes,
patchwork,  plotly, gglm, ggplot2, tidymodels)
dados <- read_excel("idosos.xlsx")
dados$resp <- as.factor(dados$resp)
dados2 <- NULL
Com <- dados |> filter(resp==1)
Sem <- dados |> filter(resp==0)
#| echo: false
#| warning: false
#| mensage: false
tab_com <- Com|>
summarytools::descr(
stats = c("min", "q1", "med", "mean","q3", "max",  "sd", "cv", "Skewness", "Kurtosis"),
justify = "c",
style = "rmarkdown",
transpose = T)
tab_sem <- Sem|>
summarytools::descr(
stats = c("min", "q1", "med", "mean","q3", "max",  "sd", "cv", "Skewness", "Kurtosis"),
justify = "c",
style = "rmarkdown",
transpose = T)
tab <- rbind(tab_com,tab_sem)
rownames(tab) <- c("Com Caducância", "Sem Caducância")
tab|>
kbl(
caption = "Medidas resumo da variável score",
digits = 2,
format.args=list(big.mark=".", decimal.mark=","),
align = "c", row.names = T, booktabs = T
)|>
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "scale_down", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
fit_l <- glm(resp~score, data=dados, family = binomial(link="logit"))
tab_l <- summary(fit_l)
tab_l <- tab_l$coefficients
rownames(tab_l) <- c("Intercepto", "Beta 1")
colnames(tab_l) <- c("Estimado", "SD", "z", "Pr(>|z|)")
parametros_l <- confint(fit_l)
#anova_l <- round(anova_l,3)
tab_l %>%
kbl(
caption = "Resultados da ANOVA, para o modelo com função de ligação logito.",
digits = 4,
format.args=list(big.mark=".", decimal.mark=","),
align = "c",
row.names = T,
) %>%
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
fit_p <- glm(resp~score, data=dados, family = binomial(link="probit"))
tab_p <- summary(fit_p)
tab_p <- tab_p$coefficients
rownames(tab_p) <- c("Intercepto", "Beta 1")
colnames(tab_p) <- c("Estimado", "SD", "z", "Pr(>|z|)")
parametros_p <- confint(fit_p)
tab_p %>%
kbl(
caption = "Resultados da ANOVA, para o modelo com função de ligação probito.",
digits = 4,
format.args=list(big.mark=".", decimal.mark=","),
align = "c",
row.names = T,
) %>%
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
fit_c <- glm(resp~score, data=dados, family = binomial(link="cauchit"))
tab_c <- summary(fit_c)
tab_c <- tab_c$coefficients
rownames(tab_c) <- c("Intercepto", "Beta 1")
colnames(tab_c) <- c("Estimado", "SD", "z", "Pr(>|z|)")
parametros_c <- confint(fit_c)
tab_c %>%
kbl(
caption = "Resultados da ANOVA, para o modelo com função de ligação cauchit.",
digits = 4,
format.args=list(big.mark=".", decimal.mark=","),
align = "c",
row.names = T,
) %>%
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
aic_l <- summary(fit_l)[5]
aic_p <- summary(fit_p)[5]
aic_c <- summary(fit_c)[5]
aic_l <- as.numeric(aic_l)
aic_p <- as.numeric(aic_p)
aic_c <- as.numeric(aic_c)
aic_l <- round(aic_l,4)
aic_p <- round(aic_p,4)
aic_c <- round(aic_c,4)
tab <- cbind(c("Logito", "Probito", "Cauchit"), c(aic_l,aic_p,aic_c))
colnames(tab) <- c("Função", "AIC")
tab %>%
kbl(
caption = "Valores de AIC dos modelos da ANOVA, para cada função de ligação.",
digits = 4,
format.args=list(big.mark=".", decimal.mark=","),
align = "c",
row.names = F,
) %>%
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
Y <- as.numeric(dados$resp)-1
X <- dados$score
n <- length(Y)
xx <- cbind(1,X)
phi <- n
#chute inicial
alpha <- 1
beta <- 0.1
# inicio das iterações
k <- 0
while(TRUE){
k <- k+1
eta <- alpha + beta*X
mu <- exp(eta)/(1-exp(eta))
V <- diag((mu)*(1-mu))
W <- V
Kbb <- phi*t(xx)%*%W%*%xx
Kbb_inv <- solve(Kbb)
z <- eta + solve(V)%*%(Y-mu)
beta_it <- phi*Kbb_inv%*%t(xx)%*%W%*%z
if(beta_it[1]-alpha<0.000001 & beta_it[2]-beta<0.000001) break
alpha <- beta_it[1]
beta <- beta_it[2]
}
# cálculo da função desvio
# Yi = 0 (sem) ou 1(com)
n_i <- length(Com$score)
mu_i <- mean(Com$score)
D_est <- 2* sum(log(1/(n_i*mu_i)) + (n_i - 1)*log((1-(1/n_i))/(1-mu_i)))
D_est
log(1/(n_i*mu_i)
log(1/(n_i*mu_i))
log(1/(n_i*mu_i))
(n_i - 1)
((1-(1/n_i))/(1-mu_i))
log((1-(1/n_i))/(1-mu_i))
1/n_i
mu_i
dados
#| echo: false
#| warning: false
library(pacman)
pacman::p_load(tidyverse,  readit, summarytools,
kableExtra,  ggpubr,  gridExtra,
glue, corrplot,  readxl, writexl, ggthemes,
patchwork,  plotly, gglm, ggplot2, tidymodels)
dados <- read_excel("idosos.xlsx")
dados$resp <- as.factor(dados$resp)
dados2 <- NULL
Com <- dados |> filter(resp==1)
Sem <- dados |> filter(resp==0)
#| echo: false
#| warning: false
#| mensage: false
tab_com <- Com|>
summarytools::descr(
stats = c("min", "q1", "med", "mean","q3", "max",  "sd", "cv", "Skewness", "Kurtosis"),
justify = "c",
style = "rmarkdown",
transpose = T)
tab_sem <- Sem|>
summarytools::descr(
stats = c("min", "q1", "med", "mean","q3", "max",  "sd", "cv", "Skewness", "Kurtosis"),
justify = "c",
style = "rmarkdown",
transpose = T)
tab <- rbind(tab_com,tab_sem)
rownames(tab) <- c("Com Caducância", "Sem Caducância")
tab|>
kbl(
caption = "Medidas resumo da variável score",
digits = 2,
format.args=list(big.mark=".", decimal.mark=","),
align = "c", row.names = T, booktabs = T
)|>
kable_styling(
full_width = F, position = 'center',
latex_options = c("striped", "HOLD_position", "scale_down", "repeat_header")
)|>
column_spec(1, bold = T
)|>
kable_material()
#| echo: false
#| warning: false
fit_l <- glm(resp~score, data=dados, family = poisson(link = "log"))
#| echo: false
#| warning: false
dados$resp <- dados$resp |> filter(resp==0) |> mutate(resp=0.00000001)
#| echo: false
#| warning: false
dados$resp <- dados$resp |> filter(resp==0) |> mutate(resp=0.00000001)
#| echo: false
#| warning: false
dados$resp <- dados$resp |> filter(dados$resp==0) |> mutate(resp=0.00000001)
fit_l <- glm(as.factor(resp)~score, data=dados, family = poisson(link = "log"))
fit_l <- glm((resp+1)~score, data=dados, family = poisson(link = "log"))
